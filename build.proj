<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" InitialTargets="Configure" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
		<IntermediateOutputPath>.nuget\</IntermediateOutputPath>
		<PackagesPath>$(IntermediateOutputPath)packages</PackagesPath>
		<Out Condition=" '$(Out)' == '' ">$(MSBuildThisFileDirectory)out</Out>
		<CommonBuildProperties>WarningLevel=0;NoWarn=1591;RunCodeAnalysis=false;Configuration=$(Configuration);Out=$(Out)</CommonBuildProperties>
		<GitInfoReportImportance>high</GitInfoReportImportance>
		<GitIgnoreTagVersion>true</GitIgnoreTagVersion>
		<GitIgnoreBranchVersion>true</GitIgnoreBranchVersion>
	</PropertyGroup>

	<ItemGroup>
		<Solution Include="src\**\*.sln"/>
	</ItemGroup>
	
	<Target Name="Clean">
		<MSBuild Projects="@(Solution)" Properties="$(CommonBuildProperties)" Targets="Clean" />
		<Exec Command="rmdir $(Out) /S /Q" Condition=" Exists('$(Out)') " ContinueOnError="true" />
		<Exec Command="rmdir $(PackagesPath) /S /Q" Condition=" Exists('$(PackagesPath)') " ContinueOnError="true" />
		<Exec Command="rmdir src\packages /S /Q" Condition=" Exists('src\packages') " ContinueOnError="true" />
	</Target>

	<Target Name="Rebuild" DependsOnTargets="Clean;Build" />
	
	<Target Name="Build" DependsOnTargets="GitInfo">
		<MSBuild Projects="@(Solution)" Properties="$(CommonBuildProperties)" />
		<Exec Command="$(PackagesPath)\gitlink\lib\net45\GitLink.exe . -f &quot;$([System.String]::new('%(Solution.FullPath)').Replace('$(MSBuildProjectDirectory)', '').TrimStart('\'))&quot; -skipverify -u https://github.com/kzu/Logo -b $(GitBranch) -c $(Configuration)" />
	</Target>

	<!-- Configure and restore initial targets and packages -->
	<Import Project="src\NuGet.Restore.targets" />
	<PropertyGroup>
		<GitInfoTargets>$(PackagesPath)\GitInfo\build\GitInfo.targets</GitInfoTargets>
		<PendingRestore Condition=" !Exists('$(GitInfoTargets)') ">true</PendingRestore>
	</PropertyGroup>

	<Target Name="GitInfoReport" /><!-- Gets overriden by the $(GitInfoTargets) if it exists -->
	<Import Project="$(GitInfoTargets)" Condition=" Exists('$(GitInfoTargets)') " />

	<Target Name="Configure" DependsOnTargets="_GetNuGet;GitInfoReport">
		<!-- We always run NuGet Install since it already checks for already-installed packages and skips them -->
		<Exec Command='"$(NuGet)" Install "$(MSBuildThisFileDirectory)packages.config" -OutputDirectory "$(PackagesPath)" -ExcludeVersion' />

		<!-- Errors if nuget packages were restored during the build -->
		<Error Text="Required build-time NuGet packages were missing and were just restored. Please run the build again."
			   Condition=" '$(PendingRestore)' == 'true' And '$(target)' != 'configure' "/>

		<PropertyGroup>
			<Version>$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)$(GitSemVerDashLabel)</Version>
		</PropertyGroup>
        
        <!-- Update AppVeyor build # to match the actual one being used -->
        <Exec Command="appveyor UpdateBuild -Version $(Version)" Condition=" '$(APPVEYOR)' == 'true' "
              ConsoleToMSBuild="true"
              ContinueOnError="WarnAndContinue" />

		<MakeDir Directories="$(Out)" Condition=" !Exists('$(Out)') " />
	</Target>
</Project>
